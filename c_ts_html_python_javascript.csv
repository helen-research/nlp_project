readme,language
"
Rufus: The Reliable USB Formatting Utility





Features

Format USB, flash card and virtual drives to FAT/FAT32/NTFS/UDF/exFAT/ReFS
Create DOS bootable USB drives, using FreeDOS or MS-DOS (Windows 8.1 or earlier)
Create BIOS or UEFI bootable drives, including UEFI bootable NTFS
Create bootable drives from bootable ISOs (Windows, Linux, etc.)
Create bootable drives from bootable disk images, including compressed ones
Create Windows To Go drives
Download official Microsoft Windows 8 or Windows 10 retail ISOs
Compute MD5, SHA-1 and SHA-256 checksums of the selected image
Twice as fast as Microsoft's USB/DVD tool or UNetbootin, on ISO -> USB creation (1)
Perform bad blocks checks, including detection of ""fake"" flash drives
Modern and familiar UI, with 39 languages natively supported
Small footprint. No installation required.
Portable
100% Free Software (GPL v3)

Compilation
Use either Visual Studio 2017 (version 15.8 or later with SDK 10.0.17134 installed) or MinGW and
then invoke the .sln or configure/make respectively.
Visual Studio
Note that, since Rufus is an OSI compliant Open Source project, you are entitled to
download and use the freely available Visual Studio Community Edition
to build, run or develop for Rufus. As per the Visual Studio Community Edition license
this applies regardless of whether you are an individual or a corporate user.
Additional information
Rufus provides extensive information about what it is doing, either through its
easily accessible log, or through the Windows debug facility.

Official Website
FAQ

Enhancements/Bugs
Please use the GitHub issue tracker
for reporting problems or suggesting new features.
(1) Tests carried out with a 16 GB USB 3.0 ADATA pen drive on a Core 2 duo/4 GB RAM platform running Windows 7 x64.
ISO: en_windows_7_ultimate_with_sp1_x64_dvd_618240.iso



Name of tool
Version
Time




Windows USB/DVD Download Tool
v1.0.30
8 mins 10s


UNetbootin
v1.1.1.1
6 mins 20s


Rufus
v1.1.0
3 mins 25s




",C
"
Squoosh!
Squoosh is an image compression web app that allows you to dive into the advanced options provided
by various image compressors.
Privacy
Google Analytics is used to record the following:

Basic visit data.
Before and after image size once an image is downloaded. These values are rounded to the nearest
kilobyte.

Image compression is handled locally; no additional data is sent to the server.
Building locally
Clone the repo, and:
npm install
npm run build
You can run the development server with:
npm start

",TypeScript
"
nndl.github.io
Neural Network and Deep Learning Course
https://nndl.github.io

",HTML
"
Natural Language Toolkit (NLTK)


NLTK -- the Natural Language Toolkit -- is a suite of open source Python
modules, data sets, and tutorials supporting research and development in Natural
Language Processing.
For documentation, please visit nltk.org.
Contributing
Do you want to contribute to NLTK development? Great! Please read more details
at CONTRIBUTING.md.
See also How to contribute to NLTK.
Donate
Have you found the toolkit helpful?  Please support NLTK development by donating
to the project via PayPal, using the link on the NLTK homepage.
Citing
If you publish work that uses NLTK, please cite the NLTK book, as follows:
Bird, Steven, Edward Loper and Ewan Klein (2009).
Natural Language Processing with Python.  O'Reilly Media Inc.

Copyright
Copyright (C) 2001-2019 NLTK Project
For license information, see LICENSE.txt.
AUTHORS.md have a list of everyone contributed to NLTK.
Redistributing

NLTK source code is distributed under the Apache 2.0 License.
NLTK documentation is distributed under the Creative Commons
Attribution-Noncommercial-No Derivative Works 3.0 United States license.
NLTK corpora are provided under the terms given in the README file for each
corpus; all are redistributable and available for non-commercial use.
NLTK may be freely redistributed, subject to the provisions of these licenses.


",Python
"
Glide Transformations



An Android transformation library providing a variety of image transformations for Glide.
Please feel free to use this.
Are you using Picasso or Fresco?
Picasso Transformations
Fresco Processors
Demo
Original Image

Transformations

How do I use it?
Step 1
Gradle
repositories {
  jcenter()
}

dependencies {
  implementation 'jp.wasabeef:glide-transformations:4.x.x'
  // If you want to use the GPU Filters
  implementation 'jp.co.cyberagent.android:gpuimage:2.x.x'
}
Step 2
Set Glide Transform.
Glide.with(this).load(R.drawable.demo)
  .apply(bitmapTransform(BlurTransformation(25, 3)))
  .into(imageView)
Advanced Step 3
You can set a multiple transformations.
val multi = MultiTransformation<Bitmap>(
  BlurTransformation(25),
  RoundedCornersTransformation(128, 0, CornerType.BOTTOM))))
Glide.with(this).load(R.drawable.demo)
  .apply(bitmapTransform(multi))
  .into(imageView))
Step 4
If you are using SupportRSBlurTransformation.
android {
  //...
  defaultConfig {
  //...
  renderscriptTargetApi YOUR_TARGET_SDK_VERSION as int
  renderscriptSupportModeEnabled true
  }
}
Transformations
Crop
CropTransformation, CropCircleTransformation, CropSquareTransformation,
RoundedCornersTransformation
Color
ColorFilterTransformation, GrayscaleTransformation
Blur
BlurTransformation
Mask
MaskTransformation
GPU Filter (use GPUImage)
Will require add dependencies for GPUImage.
ToonFilterTransformation, SepiaFilterTransformation, ContrastFilterTransformation
InvertFilterTransformation, PixelationFilterTransformation, SketchFilterTransformation
SwirlFilterTransformation, BrightnessFilterTransformation, KuwaharaFilterTransformation
VignetteFilterTransformation
Applications using Glide Transformations
Please ping me or send a pull request if you would like to be added here.



Icon
Application





Ameba Ownd



AbemaTV



TV Time



Developed By
Daichi Furiya (Wasabeef) - dadadada.chop@gmail.com



Contributions
Any contributions are welcome!
Contributers

start141

Thanks

Inspired by Picasso Transformations in TannerPerrien.

License
Copyright 2018 Wasabeef

Licensed under the Apache License, Version 2.0 (the ""License"");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an ""AS IS"" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.


",Java
